name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: nc_news_test
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Set up PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Debug PostgreSQL service
        run: docker ps

      - name: Create test database
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
        run: npm run setup-dbs

      - name: Debug database creation
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
        run: psql -c "\l"

      - name: Seed test database
        env:
          NODE_ENV: test
          PGDATABASE: nc_news_test
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
        run: npm run seed-dev

      - name: Debug tables
        env:
          PGDATABASE: nc_news_test
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
        run: psql -c "\dt"

      - name: Debug environment
        env:
          NODE_ENV: test
          PGDATABASE: nc_news_test
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
        run: env | grep -E 'NODE_ENV|PG'

      - name: Run tests
        env:
          NODE_ENV: test
          PGDATABASE: nc_news_test
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
          TZ: UTC
        run: npm test

      - name: Deploy to Render
        if: github.event_name == 'push'
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl --request POST \
               --url https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys \
               --header "Authorization: Bearer ${RENDER_API_KEY}" \
               --header "Content-Type: application/json"
